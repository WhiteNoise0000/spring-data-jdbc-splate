plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.5'
  id 'io.spring.dependency-management' version '1.1.3'
  id 'com.coditory.manifest' version '0.2.6'
  id 'maven-publish'
  id 'signing'
}

group = 'io.github.whitenoise0000'
version = '0.1.1'
sourceCompatibility = '17'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
	mavenCentral()
}

dependencies {
  // 2-way SQLパーサー
  implementation 'com.github.mygreen:splate:0.3'
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation 'com.h2database:h2:2.1.+'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

java {
  withSourcesJar()
  withJavadocJar()
}

bootJar {
  // bootJarは作成しない
  enabled = false
}
jar {
  // plainを付けない
  archiveClassifier = ''
}

manifest {
  buildAttributes = false
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'spring-data-jdbc-splate'
      from components.java
      pom {
        name = 'spring-data-jdbc-splate'
        description = 'splate(2Way-SQL library) wrapper for Spring Data JDBC'
        url = 'https://github.com/WhiteNoise0000/spring-data-jdbc-splate'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'WhiteNoise0000'
          }
        }
        scm {
          url = 'https://github.com/WhiteNoise0000/spring-data-jdbc-splate.git'
        }
      }
    }
  }
  repositories {
    maven {
      // Central Publisher Portal OSSRH Staging API のエンドポイントを使用
      def releasesRepoUrl = "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
      // Central Portal のスナップショットリポジトリのエンドポイントを使用
      def snapshotsRepoUrl = "https://central.sonatype.com/repository/maven-snapshots/"
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = findProperty("mavenUsername") // GitHub Secrets から取得
        password = findProperty("mavenPassword") // GitHub Secrets から取得
      }
    }
  }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
