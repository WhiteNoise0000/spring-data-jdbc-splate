plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.4'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'com.coditory.manifest' version '0.2.6'
  id 'maven-publish'
}

group = 'io.github.whitenoise0000'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
	mavenCentral()
}

dependencies {
  // 2-way SQLパーサー
  implementation 'com.github.mygreen:splate:0.3'
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  testImplementation 'com.h2database:h2:2.1.214'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


bootJar {
  enabled = false // 実行可能Jarを作成しない
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

manifest {
    buildAttributes = false
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'spring-data-jdbc-splate'
      pom {
        name = 'spring-data-jdbc-splate'
        description = 'splate(2Way-SQL library) wrapper for Spring Data JDBC'
        url = 'https://github.com/WhiteNoise0000/spring-data-jdbc-splate'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'WhiteNoise0000'
            email = 'white.noise.0000@gmail.com'
          }
        }
        scm {
          connection = 'https://github.com/WhiteNoise0000/spring-data-jdbc-splate.git'
          url = 'https://github.com/WhiteNoise0000/spring-data-jdbc-splate'
        }
      }
    }
  }
  repositories {
    maven {
      name = "OSSRH"
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = System.getenv("MAVEN_USERNAME")
        password = System.getenv("MAVEN_PASSWORD")
      }
    }
  }
}
